# Projeto de Automação de Irrigação com ESP8266

Este projeto utiliza um ESP8266 (ESP-01) para automatizar o controle de irrigação. O sistema é configurado para conectar-se ao Firebase e ao MQTT para monitoramento e controle remoto. A interface web usa Bootstrap para uma apresentação moderna e responsiva.

## Componentes do Projeto

1. **ESP8266 (ESP-01)**: Microcontrolador principal.
2. **Firebase**: Para armazenamento e sincronização de dados em tempo real.
3. **MQTT**: Para comunicação e controle remoto.
4. **Interface Web**: Página HTML estilizada com Bootstrap para controle e monitoramento.

## Estrutura do Projeto

- **`src/`**: Contém os arquivos de código-fonte.
  - **`GpioControl.h`**: Controla os pinos GPIO do ESP8266.
  - **`GpioControl.cpp`**: Implementação do controle dos GPIOs.
  - **`FirebaseManager.h`**: Gerencia a comunicação com o Firebase.
  - **`FirebaseManager.cpp`**: Implementação da comunicação com o Firebase.
  - **`MqttManager.h`**: Gerencia a comunicação MQTT.
  - **`MqttManager.cpp`**: Implementação da comunicação MQTT.
  - **`Main.ino`**: Arquivo principal do projeto.
- **`data/`**: Contém os arquivos da interface web.
  - **`index.html`**: Página principal com controles e visualização.
  - **`styles.css`**: Arquivo de estilo CSS.
  - **`scripts.js`**: Scripts JavaScript para interatividade.
- **`secret.env`**: Arquivo de configuração para variáveis sensíveis (não incluído no controle de versão).

## Configuração

1. **Configurar o Ambiente**:
   - Instale a IDE Arduino e o PlatformIO.
   - Configure o ambiente do ESP8266 na IDE.

2. **Instalar Bibliotecas**:
   - Adicione as bibliotecas necessárias para Firebase, MQTT e SPIFFS.

3. **Configurar Credenciais**:
   - Edite o arquivo `secret.env` para incluir suas credenciais do Firebase e do MQTT:
     ```plaintext
     FIREBASE_HOST="your-firebase-host.firebaseio.com"
     FIREBASE_AUTH="your-firebase-auth-key"
     WIFI_SSID="your-wifi-ssid"
     WIFI_PASSWORD="your-wifi-password"
     MQTT_BROKER="your-mqtt-broker-address"
     MQTT_PORT="your-mqtt-port"
     MQTT_USER="your-mqtt-username"
     MQTT_PASSWORD="your-mqtt-password"
     ```

4. **Carregar Arquivos para SPIFFS**:
   - Use o comando `platformio run --target uploadfs` para carregar os arquivos da interface web para o sistema de arquivos SPIFFS do ESP8266.

5. **Compilar e Carregar o Código**:
   - Compile e carregue o código no ESP8266 usando a IDE Arduino ou PlatformIO.

## Uso

1. Conecte o ESP8266 à sua rede Wi-Fi.
2. Acesse a interface web através do endereço IP atribuído ao ESP8266.
3. Use a interface para controlar os pinos GPIO e visualizar os dados.

## Referências

Para mais informações sobre a configuração e implementação, consulte os seguintes arquivos:

- [Instruções de Configuração do Ambiente](CONFIGURATION.md)
- [Guia do Usuário para a Interface Web](USER_GUIDE.md)
